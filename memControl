// Include input/output/streaming library
#include <iostream>
#include <string>
using namespace std;
int reg[8];
int mem[512];
/*
memControl( rw = 0 for read/1 for write, offset = reg/mem address offset, 
type = reg/mem can be replaced with 0/1 for compatibility, input = int reference variable)
return 1 for good, 0 for false
*/
int memControl(int rw, string type, int offset, int* input){
	
	if(rw == 0){ //read
		if(type == "reg"){
			*input = reg[offset];
			return 1;
		}else if(type == "mem"){
			*input = mem[offset];
			return 1;
		}else{
			return 0;
		}
	}else if(rw == 1){ //write
		if(type == "reg"){
			reg[offset] = *input;
			return 1;
		}else if(type == "mem"){
			mem[offset] = *input;
			return 1;
		}else{
			return 0;
		}
	}
	return 0;
}

int main(){
	for( int i = 0; i < 9; i++){
		reg[i] = 0x00;
	}
	for(int i = 0; i < 513; i++){
		mem[i] = 0x00;
	}
	int number; 
	//Write test
	int worked;
	number = 0xFADE;
	worked = memControl(1, "reg", 2, &number);
	number = 0x0101;
	worked = memControl(1, "mem", 2, &number);
	number = 0xADDA;
	worked = memControl(1, "mem", 3, &number);
	number = 0x1234;
	worked = memControl(1, "mem", 16, &number);
	
	//Read test
	worked = memControl(0, "reg", 2, &number);
	cout << number << endl;
	worked = memControl(0, "mem", 2, &number);
	cout << number << endl;
	worked = memControl(0, "mem", 3, &number);
	cout << number << endl;
	worked = memControl(0, "mem", 16, &number);
	cout << number << endl;
	return 0;
}
